
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>

/ {
  behaviors {
    #include "macros.dtsi"
    #include "version.dtsi"

    hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick_tap_ms = <175>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };
  };

    keymap {
        compatible = "zmk,keymap";


        default_layer {
            bindings = <
   &kp ESCAPE  &kp N1     &kp N2     &kp N3      &kp N4  &kp N5                      &mo 3                                                                                 &mo 3  &kp N6  &kp N7     &kp N8    &kp N9    &kp N0  &kp MINUS
      &kp TAB   &kp Q      &kp W      &kp E       &kp R   &kp T            &kp PRINTSCREEN                                                                             &kp GRAVE   &kp Y   &kp U      &kp I     &kp O     &kp P   &kp STAR
    &kp EQUAL   &kp A      &kp S      &kp D       &kp F   &kp G                   &kp LEFT  &kp LCTRL      &kp RIGHT                  &kp LEFT_CONTROL  &kp RIGHT_ALT     &tog 1   &kp H   &kp J      &kp K     &kp L  &kp SEMI    &kp SQT
    &kp LSHFT   &kp Z      &kp X      &kp C       &kp V   &kp B                                            &kp PG_UP                          &kp HOME                             &kp N   &kp M  &kp COMMA   &kp DOT  &kp FSLH  &kp RSHFT
 &kp LEFT_ALT   &mo 2  &kp KP_N0  &kp KP_N5  &kp KP_DOT                           &kp BSPC    &kp DEL  &kp PAGE_DOWN                           &kp END      &kp ENTER  &kp SPACE          &kp UP   &kp DOWN  &kp LBKT  &kp RBKT      &mo 2
            >;
        };

        layer_keypad {
            bindings = <
 &trans  &kp NUMBER_1     &kp N2  &kp NUMBER_3      &kp N4     &kp N5                     &trans                                                           &trans     &kp N6    &kp KP_NUM  &kp EQUAL  &kp KP_DIVIDE   &kp STAR  &kp MINUS
 &trans     &kp LC(Q)  &kp LC(W)     &kp LC(E)   &kp LC(R)  &kp LC(T)            &kp PRINTSCREEN                                                           &trans      &kp Y        &kp N7     &kp N8         &kp N9  &kp MINUS   &kp BSLH
 &trans     &kp LC(A)  &kp LC(S)     &kp LC(D)   &kp LC(F)  &kp LC(G)                     &trans      &trans    &trans                  &trans     &trans  &tog 1  &kp LC(H)        &kp N4     &kp N5         &kp N6   &kp PLUS    &kp SQT
 &trans     &kp LC(Z)  &kp LC(X)     &kp LC(C)   &kp LC(V)  &kp SPACE                                         &kp HOME                  &trans                         &kp N  &kp NUMBER_1     &kp N2         &kp N3  &kp ENTER  &kp RSHFT
 &trans         &mo 2  &kp KP_N0     &kp KP_N5  &kp KP_DOT                              &kp BSPC  &kp DELETE   &kp END                  &trans  &kp ENTER  &kp N0                   &kp UP   &kp DOWN        &kp DOT   &kp RBKT      &mo 2
            >;
        };

        layer_fn {
            bindings = <
          &kp F11         &kp F1          &kp F2          &kp F3         &kp F4         &kp F5                &kp CAPSLOCK                                                                                &trans  &macro_not_equal             &kp F7       &macro_comment       &macro_parens            &kp F10    &macro_arrow
      &kp LG(TAB)  &kp LC(LS(Q))   &kp LC(LS(W))   &kp LC(LS(E))  &kp LC(LS(R))  &kp LC(LS(T))                  &kp INSERT                                                                                &trans     &kp LC(LS(Y))      &kp LC(LS(U))        &kp LC(LS(I))       &kp LC(LS(O))      &kp LC(LS(P))   &kp BACKSLASH
 &macro_not_equal  &kp LC(LS(A))   &kp LC(LS(S))   &kp LC(LS(D))  &kp LC(LS(F))  &kp LC(LS(G))            &kp LG(LC(LEFT))  &macro_arrow  &kp LG(LC(RIGHT))                         &trans  &kp LEFT_WIN  &trans     &kp LC(LS(H))      &kp LC(LS(J))        &kp LC(LS(K))           &kp LG(L)   &kp LC(LS(SEMI))  &macro_dquotes
           &trans  &kp LC(LS(Z))   &kp LC(LS(X))   &kp LC(LS(C))  &kp LC(LS(V))  &kp LC(LS(B))                                                     &kp HOME                    &kp PAGE_UP                           &kp LC(LS(N))      &kp LC(LS(M))  &macro_smaller_than  &macro_larger_than  &kp LC(LS(SLASH))          &trans
           &trans          &mo 2  &kp LEFT_ARROW  &kp DOWN_ARROW      &kp RIGHT                                     &trans        &trans            &kp END                  &kp PAGE_DOWN        &trans  &trans                    &macro_code_close     &macro_code_open       &macro_braces      &macro_parens           &mo 2
            >;
        };

        layer_mod {
            bindings = <
  &none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                           &none                                                                          &trans   &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none         &none         &none                     &bootloader                                                                     &bootloader   &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none         &none         &none            &rgb_ug RGB_MEFS_CMD   &none   &none                  &bt BT_CLR       &none  &rgb_ug RGB_MEFS_CMD 5   &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none         &none         &none                                           &none                       &none                                       &none       &none       &none   &none   &none   &none
  &none         &none         &none         &none         &none                                         &none   &none   &none                       &none  &bl BL_TOG         &rgb_ug RGB_TOG          &bl BL_INC  &bl BL_DEC   &none   &none   &none
            >;
        };

    };
};
